{"version":3,"file":"dx-react-chart.umd.js","sources":["../src/plugins/chart-core.jsx","../src/plugins/axes-layout.jsx","../src/plugins/space-filling-rects.jsx","../src/plugins/pane.jsx","../src/plugins/pane-layout.jsx","../src/plugins/layout-manager.jsx","../src/plugins/component-layout.jsx","../src/plugins/theme-manager.jsx","../src/chart.jsx","../src/plugins/legend.jsx","../src/plugins/title.jsx","../src/plugins/scale.jsx","../src/plugins/stack.jsx","../src/utils/series-helper.jsx","../src/utils/colorize-series.jsx","../src/plugins/bar-series.jsx","../src/plugins/line-series.jsx","../src/plugins/spline-series.jsx","../src/plugins/scatter-series.jsx","../src/plugins/area-series.jsx","../src/plugins/pie-series.jsx","../src/plugins/axis.jsx","../src/plugins/grid.jsx"],"sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Plugin, Getter } from '@devexpress/dx-react-core';\nimport { axisName, prepareData } from '@devexpress/dx-chart-core';\n\nexport class ChartCore extends React.PureComponent {\n  render() {\n    const {\n      data,\n    } = this.props;\n    const getArgumentAxisName = ({ argumentAxisName }) => axisName(argumentAxisName);\n    const processedData = ({ series, processingData }) => prepareData(data, series, processingData);\n    const calculatedDomains = ({\n      axes, series, data: chartData, argumentAxisName, startFromZero, computedDomain,\n    }) => computedDomain(axes, series, chartData, argumentAxisName, startFromZero);\n    return (\n      <Plugin>\n        <Getter name=\"data\" computed={processedData} />\n        <Getter name=\"argumentAxisName\" computed={getArgumentAxisName} />\n        <Getter name=\"domains\" computed={calculatedDomains} />\n      </Plugin>\n    );\n  }\n}\n\nChartCore.propTypes = {\n  data: PropTypes.array.isRequired,\n};\n","import * as React from 'react';\nimport {\n  TOP, BOTTOM, LEFT, RIGHT,\n} from '@devexpress/dx-chart-core';\nimport { Plugin, Template, TemplatePlaceholder } from '@devexpress/dx-react-core';\n\nexport const AxesLayout = () => (\n  <Plugin>\n    <Template name=\"canvas\">\n      <div id=\"center-center\" style={{ display: 'flex', flexDirection: 'column', flexGrow: 1 }}>\n        <div id={`${TOP}-axis-container`} style={{ display: 'flex', flexDirection: 'row' }}>\n          <TemplatePlaceholder name={`${TOP}-${LEFT}-axis`} />\n          <TemplatePlaceholder name={`${TOP}-axis`} />\n          <TemplatePlaceholder name={`${TOP}-${RIGHT}-axis`} />\n        </div>\n        <div id=\"center-axis-container\" style={{ display: 'flex', flexDirection: 'row', flexGrow: 1 }}>\n          <TemplatePlaceholder name={`${LEFT}-axis`} />\n          <TemplatePlaceholder />\n          <TemplatePlaceholder name={`${RIGHT}-axis`} />\n        </div>\n        <div id={`${BOTTOM}-axis-container`} style={{ display: 'flex', flexDirection: 'row' }}>\n          <TemplatePlaceholder name={`${BOTTOM}-${LEFT}-axis`} />\n          <TemplatePlaceholder name={`${BOTTOM}-axis`} />\n          <TemplatePlaceholder name={`${BOTTOM}-${RIGHT}-axis`} />\n        </div>\n      </div>\n    </Template>\n  </Plugin>\n);\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Plugin, Template, TemplateConnector } from '@devexpress/dx-react-core';\n\nexport class SpaceFillingRects extends React.PureComponent {\n  render() {\n    const { placeholders } = this.props;\n    return (\n      <Plugin name=\"SpaceFillingRects\">\n        {placeholders.map(name => (\n          <Template name={name} key={name}>\n            <TemplateConnector>\n              {({ layouts: positions }) => {\n                const [, horizontal, postfix] = name.split('-');\n                const { width } = positions[horizontal + (postfix ? `-${postfix}` : '')] || {};\n                return <div id={name} style={{ width }} />;\n              }}\n            </TemplateConnector>\n          </Template>\n        ))}\n      </Plugin>\n    );\n  }\n}\n\nSpaceFillingRects.propTypes = {\n  placeholders: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { TemplatePlaceholder } from '@devexpress/dx-react-core';\n\nexport class Pane extends React.PureComponent {\n  componentDidMount() {\n    const { width, height, changeBBox } = this.props;\n    changeBBox({ placeholder: 'pane', bBox: { width, height } });\n  }\n\n  componentDidUpdate({ width: prevWidth, height: prevHeight, changeBBox }) {\n    const { width, height } = this.props;\n    if (prevWidth !== width || prevHeight !== height) {\n      changeBBox({ placeholder: 'pane', bBox: { width, height } });\n    }\n  }\n\n  render() {\n    const { width, height } = this.props;\n\n    return (\n      <div style={{ width: '100%' }}>\n        <svg\n          width={width}\n          height={height}\n          style={{\n            position: 'absolute', left: 0, top: 0, overflow: 'visible',\n          }}\n        >\n          <TemplatePlaceholder name=\"series\" />\n        </svg>\n      </div>\n    );\n  }\n}\n\nPane.propTypes = {\n  changeBBox: PropTypes.func.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n};\n","import * as React from 'react';\nimport {\n  Plugin,\n  TemplateConnector,\n  Template,\n  Sizer,\n} from '@devexpress/dx-react-core';\nimport { Pane } from './pane';\n\n/* eslint-disable-next-line react/prefer-stateless-function */\nexport class PaneLayout extends React.PureComponent {\n  render() {\n    return (\n      <Plugin name=\"PaneLayout\">\n        <Template name=\"canvas\">\n          <TemplateConnector>\n            {(_, { changeBBox }) => (\n              <Sizer\n                style={{ flex: 1, zIndex: 1 }}\n              >\n                {({ width, height }) => (\n                  <Pane\n                    changeBBox={changeBBox}\n                    height={height}\n                    width={width}\n                  />\n                )}\n              </Sizer>\n            )}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Plugin,\n  Getter,\n  Action,\n  Template,\n  TemplatePlaceholder,\n  createStateHelper,\n} from '@devexpress/dx-react-core';\nimport { bBoxes } from '@devexpress/dx-chart-core';\n\nexport class LayoutManager extends React.Component {\n  constructor(props) {\n    super(props);\n    const { width, height } = this.props;\n\n    this.state = { bBoxes: { pane: { width, height } } };\n\n    const stateHelper = createStateHelper(this);\n\n    this.changeBBox = stateHelper.applyFieldReducer.bind(\n      stateHelper,\n      'bBoxes',\n      bBoxes,\n    );\n  }\n\n  render() {\n    const {\n      width, height, rootComponent: Root, ...restProps\n    } = this.props;\n    const { bBoxes: stateBBoxes } = this.state;\n\n    return (\n      <Plugin>\n        <Getter name=\"layouts\" value={stateBBoxes} />\n        <Action name=\"changeBBox\" action={this.changeBBox} />\n\n        <Template name=\"root\">\n          <Root\n            height={height}\n            width={width}\n            {...restProps}\n          >\n            <TemplatePlaceholder name=\"canvas\" />\n          </Root>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nLayoutManager.propTypes = {\n  width: PropTypes.number,\n  height: PropTypes.number.isRequired,\n  rootComponent: PropTypes.func.isRequired,\n};\n\nLayoutManager.defaultProps = {\n  width: 0,\n};\n","import * as React from 'react';\nimport {\n  TOP, BOTTOM, LEFT, RIGHT,\n} from '@devexpress/dx-chart-core';\nimport { Plugin, Template, TemplatePlaceholder } from '@devexpress/dx-react-core';\n\nexport const ComponentLayout = () => (\n  <Plugin name=\"ComponentLayout\">\n    <Template name=\"canvas\">\n      <div id={`${TOP}-container`} style={{ display: 'flex', flexDirection: 'row' }}>\n        <TemplatePlaceholder name={`${TOP}-${LEFT}`} />\n        <TemplatePlaceholder name={TOP} />\n        <TemplatePlaceholder name={`${TOP}-${LEFT}`} />\n      </div>\n      <div id=\"center-container\" style={{ display: 'flex', flexDirection: 'row', flexGrow: 1 }}>\n        <TemplatePlaceholder name={LEFT} />\n        <TemplatePlaceholder />\n        <TemplatePlaceholder name={RIGHT} />\n      </div>\n      <div id={`${BOTTOM}-container`} style={{ display: 'flex', flexDirection: 'row' }}>\n        <TemplatePlaceholder name={`${BOTTOM}-${LEFT}`} />\n        <TemplatePlaceholder name={BOTTOM} />\n      </div>\n    </Template>\n  </Plugin>\n);\n","import * as React from 'react';\nimport { Plugin, Getter } from '@devexpress/dx-react-core';\nimport { palette } from '@devexpress/dx-chart-core';\n\nconst themeComputing = ({ series }) => palette(series);\nconst pieThemeComputing = ({\n  domains,\n  argumentAxisName,\n}) => palette(domains[argumentAxisName].domain.map(uniqueName => ({ uniqueName })));\n\n\nexport const ThemeManager = () => (\n  <Plugin name=\"ThemeManager\">\n    <Getter name=\"colorDomain\" computed={themeComputing} />\n    <Getter name=\"pieColorDomain\" computed={pieThemeComputing} />\n  </Plugin>\n);\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { PluginHost } from '@devexpress/dx-react-core';\nimport {\n  TOP, BOTTOM, LEFT, RIGHT,\n} from '@devexpress/dx-chart-core';\n\nimport { ChartCore } from './plugins/chart-core';\nimport { AxesLayout } from './plugins/axes-layout';\nimport { SpaceFillingRects } from './plugins/space-filling-rects';\nimport { PaneLayout } from './plugins/pane-layout';\nimport { LayoutManager } from './plugins/layout-manager';\nimport { ComponentLayout } from './plugins/component-layout';\nimport { ThemeManager } from './plugins/theme-manager';\n\nexport class Chart extends React.PureComponent {\n  render() {\n    const {\n      data,\n      width,\n      height,\n      children,\n      rootComponent: Root,\n      ...restProps\n    } = this.props;\n    return ((\n      <PluginHost>\n        {children}\n        <ChartCore data={data} />\n        <ThemeManager />\n        <LayoutManager\n          width={width}\n          height={height}\n          rootComponent={Root}\n          {...restProps}\n        />\n        <PaneLayout />\n        <AxesLayout />\n        <ComponentLayout />\n        <SpaceFillingRects placeholders={[\n          `${TOP}-${LEFT}`,\n          `${TOP}-${RIGHT}`,\n          `${BOTTOM}-${LEFT}`,\n          `${BOTTOM}-${RIGHT}`,\n          `${TOP}-${LEFT}-axis`,\n          `${TOP}-${RIGHT}-axis`,\n          `${BOTTOM}-${LEFT}-axis`,\n          `${BOTTOM}-${RIGHT}-axis`,\n        ]}\n        />\n      </PluginHost>\n    ));\n  }\n}\nChart.propTypes = {\n  data: PropTypes.array.isRequired,\n  rootComponent: PropTypes.func.isRequired,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  children: PropTypes.node,\n};\n\nChart.defaultProps = {\n  height: 500,\n  width: undefined,\n  children: null,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport {\n  Plugin,\n  TemplateConnector,\n  Template,\n  TemplatePlaceholder,\n} from '@devexpress/dx-react-core';\n\nexport class Legend extends React.PureComponent {\n  render() {\n    const {\n      markerComponent: Marker,\n      labelComponent: Label,\n      rootComponent: Root,\n      itemComponent: Item,\n      position,\n    } = this.props;\n    const placeholder = position;\n    return (\n      <Plugin name=\"Legend\">\n        <Template name={placeholder}>\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({\n              series,\n              colorDomain,\n            }) => (\n              <Root name={`legend-${placeholder}`}>\n                {colorDomain.domain().map((domainName) => {\n                  const { name, color } = series.find(({\n                    uniqueName,\n                  }) => uniqueName === domainName);\n                  return (\n                    <Item key={domainName}>\n                      <Marker name={name} color={color || colorDomain(domainName)} />\n                      <Label text={name} />\n                    </Item>\n                  );\n                })}\n              </Root>\n            )}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nLegend.propTypes = {\n  markerComponent: PropTypes.func.isRequired,\n  labelComponent: PropTypes.func.isRequired,\n  rootComponent: PropTypes.func.isRequired,\n  itemComponent: PropTypes.func.isRequired,\n  position: PropTypes.string,\n};\n\nLegend.defaultProps = {\n  position: 'right',\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport {\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n} from '@devexpress/dx-react-core';\n\nexport class Title extends React.PureComponent {\n  render() {\n    const {\n      textComponent: Text,\n      text,\n      position,\n      ...restProps\n    } = this.props;\n    const placeholder = position;\n    return (\n      <Plugin name=\"Title\">\n        <Template name={placeholder}>\n          <TemplatePlaceholder />\n          <Text text={text} {...restProps} />\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTitle.propTypes = {\n  textComponent: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n  position: PropTypes.string,\n};\n\nTitle.defaultProps = {\n  position: 'top',\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Plugin, Getter } from '@devexpress/dx-react-core';\nimport { domains, computedExtension } from '@devexpress/dx-chart-core';\n\nexport class Scale extends React.PureComponent {\n  render() {\n    const { extensions } = this.props;\n    const getExtension = () => computedExtension(extensions);\n    return (\n      <Plugin name=\"Scale\">\n        <Getter name=\"computedDomain\" value={domains} />\n        <Getter name=\"scaleExtension\" computed={getExtension} />\n      </Plugin>\n    );\n  }\n}\n\nScale.propTypes = {\n  extensions: PropTypes.arrayOf(PropTypes.shape({\n    type: PropTypes.string,\n    constructor: PropTypes.func,\n  })),\n};\n\nScale.defaultProps = {\n  extensions: [],\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Plugin, Getter } from '@devexpress/dx-react-core';\nimport { processData, seriesWithStacks, stacks } from '@devexpress/dx-chart-core';\nimport {\n  stackOrderNone,\n  stackOffsetDiverging,\n} from 'd3-shape';\n\nconst computedSeries = ({ series = [] }) => seriesWithStacks(series);\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport class Stack extends React.PureComponent {\n  render() {\n    const { offset, order } = this.props;\n    const computedStacks = ({ series = [] }) => stacks(series);\n    return (\n      <Plugin name=\"Stack\">\n        <Getter name=\"series\" computed={computedSeries} />\n        <Getter name=\"processingData\" value={processData(offset, order)} />\n        <Getter name=\"stacks\" computed={computedStacks} />\n      </Plugin>\n    );\n  }\n}\n\nStack.propTypes = {\n  offset: PropTypes.func,\n  order: PropTypes.func,\n};\n\nStack.defaultProps = {\n  offset: stackOffsetDiverging,\n  order: stackOrderNone,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Template,\n  Plugin,\n  Getter,\n  TemplatePlaceholder,\n  TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport {\n  findSeriesByName, xyScales, seriesData, checkZeroStart,\n} from '@devexpress/dx-chart-core';\n\nexport const withSeriesPlugin = (\n  Series,\n  pluginName,\n  pathType,\n  calculateCoordinates,\n) => {\n  class Component extends React.PureComponent {\n    render() {\n      const {\n        name,\n        valueField,\n        argumentField,\n        axisName,\n        stack: stackProp,\n        color,\n        groupWidth,\n        ...restProps\n      } = this.props;\n\n      const symbolName = Symbol(name);\n      const getSeriesDataComputed = ({ series }) => seriesData(series, {\n        valueField,\n        argumentField,\n        name,\n        symbolName,\n        axisName,\n        stack: stackProp,\n        color,\n        uniqueName: name,\n      });\n      const startFromZeroByAxes = (\n        { startFromZero = {} },\n      ) => checkZeroStart(startFromZero, axisName, pathType);\n      return (\n        <Plugin name={pluginName}>\n          <Getter name=\"series\" computed={getSeriesDataComputed} />\n          <Getter name=\"startFromZero\" computed={startFromZeroByAxes} />\n          <Template name=\"series\">\n            <TemplatePlaceholder />\n            <TemplateConnector>\n              {({\n                series,\n                domains,\n                stacks,\n                data,\n                argumentAxisName,\n                layouts,\n                scaleExtension,\n                colorDomain,\n                pieColorDomain,\n              }) => {\n                const {\n                  stack, uniqueName,\n                } = findSeriesByName(symbolName, series);\n\n                const scales = xyScales(\n                  domains[argumentAxisName],\n                  domains[axisName],\n                  layouts.pane,\n                  groupWidth,\n                  scaleExtension,\n                );\n                const calculatedCoordinates = calculateCoordinates(\n                  data,\n                  scales,\n                  argumentField,\n                  valueField,\n                  name,\n                  stack,\n                  stacks,\n                  restProps,\n                  scaleExtension,\n                );\n\n                return (\n                  <Series\n                    uniqueName={uniqueName}\n                    colorDomain={pluginName === 'PieSeries' ? pieColorDomain : colorDomain}\n                    coordinates={calculatedCoordinates}\n                    color={color}\n                    {...restProps}\n                  />\n                );\n              }}\n            </TemplateConnector>\n          </Template>\n        </Plugin>\n      );\n    }\n  }\n  Component.propTypes = {\n    name: PropTypes.string,\n    valueField: PropTypes.string.isRequired,\n    argumentField: PropTypes.string.isRequired,\n    axisName: PropTypes.string,\n    stack: PropTypes.string,\n    color: PropTypes.string,\n    groupWidth: PropTypes.number,\n  };\n  Component.defaultProps = {\n    name: 'defaultSeriesName',\n    color: undefined,\n    axisName: undefined,\n    stack: undefined,\n    groupWidth: 0.7,\n  };\n  return Component;\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nexport const withColor = (Series) => {\n  const ColorizedSeries = ({\n    colorDomain, uniqueName, color: seriesColor, ...restProps\n  }) => {\n    const color = colorDomain(uniqueName);\n    return <Series color={seriesColor || color} {...restProps} />;\n  };\n  ColorizedSeries.propTypes = {\n    color: PropTypes.string,\n    colorDomain: PropTypes.func.isRequired,\n    uniqueName: PropTypes.string.isRequired,\n  };\n  ColorizedSeries.defaultProps = {\n    color: undefined,\n  };\n\n  return ColorizedSeries;\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { dBar, barCoordinates as computeCoordinates } from '@devexpress/dx-chart-core';\nimport { withSeriesPlugin, withColor } from '../utils';\n\nconst Series = ({\n  ...props\n}) => {\n  const {\n    pointComponent: Point,\n    coordinates,\n    path,\n    barWidth,\n    ...restProps\n  } = props;\n  return (coordinates.map(item => (\n    <Point\n      key={item.id.toString()}\n      {...item}\n      {...dBar(item)}\n      {...restProps}\n    />\n  )));\n};\n\nexport const BarSeries = withSeriesPlugin(\n  withColor(Series),\n  'BarSeries',\n  'bar',\n  computeCoordinates,\n);\n\nSeries.propTypes = {\n  pointComponent: PropTypes.func.isRequired,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { dLine, coordinates } from '@devexpress/dx-chart-core';\nimport { withSeriesPlugin, withColor } from '../utils';\n\nconst Series = ({\n  ...props\n}) => {\n  const {\n    seriesComponent: Path,\n    ...restProps\n  } = props;\n  return (\n    <Path {...restProps} path={dLine} />\n  );\n};\n\nexport const LineSeries = withSeriesPlugin(\n  withColor(Series),\n  'LineSeries',\n  'line',\n  coordinates,\n);\n\nSeries.propTypes = {\n  seriesComponent: PropTypes.func.isRequired,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { dSpline, coordinates } from '@devexpress/dx-chart-core';\nimport { withSeriesPlugin, withColor } from '../utils';\n\nconst Series = ({\n  ...props\n}) => {\n  const {\n    seriesComponent: Path,\n    ...restProps\n  } = props;\n  return (\n    <Path {...restProps} path={dSpline} />\n  );\n};\n\nexport const SplineSeries = withSeriesPlugin(\n  withColor(Series),\n  'SplineSeries',\n  'spline',\n  coordinates,\n);\n\nSeries.propTypes = {\n  seriesComponent: PropTypes.func.isRequired,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { pointAttributes, coordinates as computeCoordinates } from '@devexpress/dx-chart-core';\nimport { withSeriesPlugin, withColor } from '../utils';\n\nconst Series = ({\n  ...props\n}) => {\n  const {\n    pointComponent: Point,\n    coordinates,\n    point = {},\n    ...restProps\n  } = props;\n  const getAttributes = pointAttributes(point);\n  return (coordinates.map(item => (\n    <Point\n      key={item.id.toString()}\n      {...getAttributes(item)}\n      {...item}\n      {...restProps}\n    />\n  )));\n};\n\nconst BaseSeries = ({ Path, path, ...props }) => <Path {...props} />;\n\nBaseSeries.propTypes = {\n  Path: PropTypes.func,\n  path: PropTypes.func,\n};\n\nBaseSeries.defaultProps = {\n  Path: Series,\n  path: null,\n};\n\nexport const ScatterSeries = withSeriesPlugin(\n  withColor(BaseSeries),\n  'ScatterSeries',\n  'scatter',\n  computeCoordinates,\n);\n\nScatterSeries.Path = Series;\n\nSeries.propTypes = {\n  pointComponent: PropTypes.func.isRequired,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { dArea, coordinates } from '@devexpress/dx-chart-core';\nimport { withSeriesPlugin, withColor } from '../utils';\n\nconst Series = ({\n  ...props\n}) => {\n  const {\n    seriesComponent: Path,\n    ...restProps\n  } = props;\n  return (\n    <Path\n      path={dArea}\n      {...restProps}\n    />\n  );\n};\n\nexport const AreaSeries = withSeriesPlugin(\n  withColor(Series),\n  'AreaSeries',\n  'area',\n  coordinates,\n);\n\nSeries.propTypes = {\n  seriesComponent: PropTypes.func.isRequired,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { pieAttributes } from '@devexpress/dx-chart-core';\nimport { withSeriesPlugin } from '../utils';\n\nconst Series = ({\n  ...props\n}) => {\n  const {\n    pointComponent: Point,\n    coordinates,\n    colorDomain,\n    uniqueName,\n    ...restProps\n  } = props;\n  const { innerRadius, outerRadius, ...pointOptions } = restProps;\n  return (coordinates.map(item => (\n    <Point\n      key={item.id.toString()}\n      {...item}\n      {...pointOptions}\n      color={colorDomain(item.id)}\n    />\n  )));\n};\n\nexport const PieSeries = withSeriesPlugin(\n  Series,\n  'PieSeries',\n  'arc',\n  pieAttributes,\n);\n\n\nSeries.propTypes = {\n  style: PropTypes.object,\n  pointComponent: PropTypes.func.isRequired,\n};\n\nSeries.defaultProps = {\n  style: {},\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport {\n  Plugin,\n  TemplateConnector,\n  Template,\n  TemplatePlaceholder,\n  Getter,\n} from '@devexpress/dx-react-core';\n\nimport { axisCoordinates, HORIZONTAL, axesData } from '@devexpress/dx-chart-core';\n\nexport class Axis extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      xCorrection: 0,\n      yCorrection: 0,\n    };\n    this.createRefsHandler = this.createRefsHandler.bind(this);\n  }\n\n  createRefsHandler(placeholder, changeBBox, orientation) {\n    return (el) => {\n      if (!el) {\n        return;\n      }\n      const {\n        width, height, x, y,\n      } = el.getBBox();\n      const { width: stateWidth, height: stateHeight } = this.state;\n\n      if (width === stateWidth && height === stateHeight) return;\n      changeBBox({\n        placeholder,\n        bBox: {\n          width,\n          height,\n        },\n      });\n      this.setState({\n        width,\n        height,\n        xCorrection: orientation !== HORIZONTAL ? x : 0,\n        yCorrection: orientation !== HORIZONTAL ? 0 : y,\n      });\n    };\n  }\n\n  calculateLayout(width, height, defaultWidth, defaultHeight) {\n    const calculatedWidth = width || defaultWidth;\n    const calculatedHeight = height || defaultHeight;\n    const {\n      width: containerWidth,\n      height: containerHeight,\n    } = (this.node && this.node.getBoundingClientRect()) || {};\n\n    return {\n      width: containerWidth || calculatedWidth,\n      height: containerHeight || calculatedHeight,\n    };\n  }\n\n  render() {\n    const {\n      tickSize,\n      position,\n      name,\n      indentFromAxis,\n      isArgumentAxis,\n      rootComponent: Root,\n      tickComponent: Tick,\n      labelComponent: Label,\n      lineComponent: Line,\n    } = this.props;\n    const getAxesDataComputed = ({ axes }) => axesData(axes, this.props);\n    return (\n      <Plugin name=\"Axis\">\n        <Getter name=\"axes\" computed={getAxesDataComputed} />\n        {isArgumentAxis ? <Getter name=\"argumentAxisName\" value={name || 'argumentAxis'} /> : null}\n        <Template name={`${position}-axis`}>\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({\n              domains,\n              argumentAxisName,\n              layouts,\n              scaleExtension,\n            }, { changeBBox }) => {\n              const placeholder = `${position}-axis`;\n              const domain = isArgumentAxis ? domains[argumentAxisName] : domains[name];\n              const { orientation, type } = domain;\n              const { constructor } = scaleExtension.find(item => item.type === type);\n              const { width: widthCalculated, height: heightCalculated } = layouts[placeholder]\n                    || { width: 0, height: 0 };\n\n              const {\n                width: widthPostCalculated,\n                height: heightPostCalculated,\n              } = this.calculateLayout(\n                widthCalculated,\n                heightCalculated,\n                0,\n                0,\n              );\n\n              const coordinates = axisCoordinates(\n                domain,\n                position,\n                widthPostCalculated,\n                heightPostCalculated,\n                tickSize,\n                indentFromAxis,\n                constructor,\n              );\n              const {\n                xCorrection,\n                yCorrection,\n              } = this.state;\n\n              return (\n                <div\n                  style={{\n                    position: 'relative',\n                    width: orientation === 'horizontal' ? undefined : widthCalculated,\n                    height: orientation === 'horizontal' ? heightCalculated : null,\n                    flexGrow: orientation === 'horizontal' ? 1 : undefined,\n                  }}\n                  ref={(node) => { this.node = node; }}\n                >\n                  <svg\n                    width={widthPostCalculated}\n                    height={heightPostCalculated}\n                    style={{\n                      position: 'absolute', left: 0, top: 0, overflow: 'visible',\n                    }}\n                  >\n                    <Root\n                      refsHandler={this.createRefsHandler(\n                        placeholder,\n                        changeBBox,\n                        orientation,\n                      )}\n                      x={-xCorrection}\n                      y={-yCorrection}\n                    >\n                      {\n                      coordinates.ticks.map(({\n                        x1, x2, y1, y2, text,\n                      }) => (\n                        <Tick\n                          key={text}\n                          x1={x1}\n                          x2={x2}\n                          y1={y1}\n                          y2={y2}\n                        />\n                      ))\n                    }\n                      <Line\n                        width={widthPostCalculated}\n                        height={heightPostCalculated}\n                        orientation={orientation}\n                      />\n                      {coordinates.ticks.map(({\n                        text,\n                        xText,\n                        yText,\n                        dominantBaseline,\n                        textAnchor,\n                      }) => (\n                        <React.Fragment key={text}>\n                          <Label\n                            text={text}\n                            x={xText}\n                            y={yText}\n                            dominantBaseline={dominantBaseline}\n                            textAnchor={textAnchor}\n                          />\n                        </React.Fragment>\n                      ))}\n                    </Root>\n                  </svg>\n                </div>\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nAxis.propTypes = {\n  name: PropTypes.string,\n  isArgumentAxis: PropTypes.bool,\n  rootComponent: PropTypes.func.isRequired,\n  tickComponent: PropTypes.func.isRequired,\n  labelComponent: PropTypes.func.isRequired,\n  lineComponent: PropTypes.func.isRequired,\n  position: PropTypes.string.isRequired,\n  tickSize: PropTypes.number,\n  indentFromAxis: PropTypes.number,\n};\n\nAxis.defaultProps = {\n  tickSize: 5,\n  indentFromAxis: 10,\n  name: undefined,\n  isArgumentAxis: false,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Template,\n  Plugin,\n  TemplatePlaceholder,\n  TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport {\n  axisCoordinates, HORIZONTAL, TOP, LEFT,\n} from '@devexpress/dx-chart-core';\n\nexport class Grid extends React.PureComponent {\n  render() {\n    const {\n      name,\n      lineComponent: Line,\n      ...restProps\n    } = this.props;\n    return (\n      <Plugin name=\"Grid\">\n        <Template name=\"series\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({\n              domains,\n              layouts,\n              scaleExtension,\n            }) => {\n              const domain = domains[name];\n              const { orientation, type } = domain;\n              const { constructor } = scaleExtension.find(item => item.type === type);\n              const {\n                width, height,\n              } = layouts.pane;\n\n              const coordinates = axisCoordinates(\n                domain,\n                orientation === HORIZONTAL ? TOP : LEFT,\n                width,\n                height,\n                0,\n                undefined,\n                constructor,\n              );\n\n              return ((\n                <React.Fragment>\n                  {coordinates.ticks.map(({\n                    x1, x2, y1, y2, text,\n                  }) => (\n                    <Line\n                      key={text}\n                      x1={orientation === 'horizontal' ? x1 : width}\n                      x2={x2}\n                      y1={orientation === 'horizontal' ? height : y1}\n                      y2={y2}\n                      {...restProps}\n                    />\n                  ))}\n                </React.Fragment>\n              ));\n            }}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nGrid.propTypes = {\n  name: PropTypes.string,\n  lineComponent: PropTypes.func.isRequired,\n};\n\nGrid.defaultProps = {\n  name: undefined,\n};\n"],"names":["ChartCore","data","props","getArgumentAxisName","argumentAxisName","axisName","processedData","series","processingData","prepareData","calculatedDomains","axes","chartData","startFromZero","computedDomain","React.createElement","Getter","React","propTypes","PropTypes","isRequired","AxesLayout","display","flexDirection","flexGrow","TOP","TemplatePlaceholder","LEFT","RIGHT","BOTTOM","SpaceFillingRects","placeholders","map","name","positions","layouts","split","horizontal","postfix","width","Pane","height","changeBBox","placeholder","bBox","prevWidth","prevHeight","left","top","overflow","PaneLayout","_","flex","zIndex","LayoutManager","state","bBoxes","pane","stateHelper","createStateHelper","applyFieldReducer","bind","Root","rootComponent","restProps","stateBBoxes","Action","defaultProps","ComponentLayout","themeComputing","palette","pieThemeComputing","domains","domain","uniqueName","ThemeManager","Chart","children","undefined","Legend","Marker","markerComponent","Label","labelComponent","Item","itemComponent","position","colorDomain","domainName","find","color","Title","Text","textComponent","text","Scale","extensions","getExtension","computedExtension","computedSeries","seriesWithStacks","Stack","offset","order","computedStacks","stacks","processData","stackOffsetDiverging","stackOrderNone","withSeriesPlugin","Series","pluginName","pathType","calculateCoordinates","Component","valueField","argumentField","stackProp","stack","groupWidth","symbolName","Symbol","getSeriesDataComputed","seriesData","startFromZeroByAxes","checkZeroStart","scaleExtension","pieColorDomain","findSeriesByName","scales","xyScales","calculatedCoordinates","withColor","ColorizedSeries","seriesColor","Point","pointComponent","coordinates","path","barWidth","item","id","toString","dBar","BarSeries","computeCoordinates","Path","seriesComponent","dLine","LineSeries","dSpline","SplineSeries","point","getAttributes","pointAttributes","BaseSeries","ScatterSeries","dArea","AreaSeries","innerRadius","outerRadius","pointOptions","PieSeries","pieAttributes","Axis","createRefsHandler","orientation","el","getBBox","x","y","stateWidth","stateHeight","setState","HORIZONTAL","defaultWidth","defaultHeight","calculatedWidth","calculatedHeight","node","getBoundingClientRect","containerWidth","containerHeight","tickSize","indentFromAxis","isArgumentAxis","Tick","tickComponent","Line","lineComponent","getAxesDataComputed","axesData","type","constructor","widthCalculated","heightCalculated","calculateLayout","widthPostCalculated","heightPostCalculated","axisCoordinates","xCorrection","yCorrection","ticks","x1","x2","y1","y2","xText","yText","dominantBaseline","textAnchor","Grid"],"mappings":"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"}