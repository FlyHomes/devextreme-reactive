{"version":3,"file":"dx-chart-core.umd.js","sources":["../src/constants.js","../src/plugins/scale/computeds.js","../src/plugins/layout-manager/computeds.js","../src/utils/scale.js","../src/plugins/axis/computeds.js","../src/plugins/series/computeds.js","../src/plugins/stack/computeds.js","../src/plugins/theme-manager/computeds.js","../src/plugins/chart/computeds.js"],"sourcesContent":["export const HORIZONTAL = 'horizontal';\nexport const VERTICAL = 'vertical';\nexport const TOP = 'top';\nexport const BOTTOM = 'bottom';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const MIDDLE = 'middle';\nexport const END = 'end';\nexport const START = 'start';\n\nexport const BAND = 'band';\n","import { extent } from 'd3-array';\nimport { scaleLinear, scaleBand } from 'd3-scale';\nimport { HORIZONTAL, VERTICAL, BAND } from '../../constants';\n\nconst isDefined = item => item !== undefined;\n\nconst collectAxesOptions = axes => axes.reduce(\n  (domains, {\n    name, type, tickFormat,\n  }) => ({\n    ...domains,\n    [name]: {\n      type,\n      tickFormat,\n    },\n  }),\n  {},\n);\n\nconst calculateDomainField = (getFieldItemFirst, getFieldItemSecond, data, domain = [], type) => {\n  const getCategories = (prev, cur) => {\n    const categories = getFieldItemFirst(cur);\n    if (isDefined(categories)) {\n      return [...prev, categories];\n    }\n    return prev;\n  };\n  if (type === BAND) {\n    return [...domain, ...data.reduce(getCategories, [])];\n  }\n  return extent([\n    ...domain,\n    ...extent(data, getFieldItemFirst),\n    ...extent(data, getFieldItemSecond),\n  ]);\n};\n\nconst getCorrectAxisType = (type, data, field) => {\n  if (!type && typeof data.find(item => isDefined(item[field]))[field] === 'string') {\n    return 'band';\n  }\n  return type || 'linear';\n};\n\nconst getFieldStack = (index, object) => (object && object[index] ? object[index] : undefined);\n\nconst calculateDomain = (series, data, axesOptions, argumentAxisName) => series.reduce(\n  (domains, {\n    valueField, argumentField, axisName, name,\n  }) => {\n    const valueType = getCorrectAxisType(\n      domains[axisName] && domains[axisName].type,\n      data,\n      valueField,\n    );\n    const argumentType = getCorrectAxisType(\n      domains[argumentAxisName] && domains[argumentAxisName].type,\n      data,\n      argumentField,\n    );\n    return {\n      ...domains,\n      [axisName]: {\n        domain: calculateDomainField(\n          object => getFieldStack(1, object[`${valueField}-${name}-stack`]),\n          object => getFieldStack(0, object[`${valueField}-${name}-stack`]),\n          data,\n          domains[axisName] && domains[axisName].domain,\n          valueType,\n        ),\n        orientation: VERTICAL,\n        type: valueType,\n        tickFormat: domains[axisName] && domains[axisName].tickFormat,\n      },\n      [argumentAxisName]: {\n        domain: calculateDomainField(\n          object => object[argumentField],\n          null,\n          data,\n          domains[argumentAxisName] && domains[argumentAxisName].domain,\n          argumentType,\n        ),\n        orientation: HORIZONTAL,\n        type: argumentType,\n        tickFormat: domains[argumentAxisName] && domains[argumentAxisName].tickFormat,\n      },\n    };\n  },\n  axesOptions,\n);\n\nconst adjustRangeToZero = range => [Math.min(range[0], 0), Math.max(0, range[1])];\n\nconst recalculateDomain = (range, currentDomain) => ({\n  domain: currentDomain.type !== BAND ? range : currentDomain.domain,\n  type: currentDomain.type,\n  orientation: currentDomain.orientation,\n  tickFormat: currentDomain.tickFormat,\n});\n\nconst adjustDomains = (axes, calculatedDomains, startFromZero) => {\n  const adjustedDomainsBySeries = Object.keys(calculatedDomains).reduce((domains, name) => {\n    const currentDomain = domains[name];\n    const range = startFromZero[name]\n      ? adjustRangeToZero(currentDomain.domain) : currentDomain.domain;\n    return {\n      ...domains,\n      [name]: recalculateDomain(range, currentDomain),\n    };\n  }, calculatedDomains);\n\n  return axes.reduce(\n    (domains, {\n      name, min, max,\n    }) => {\n      const currentDomain = domains[name];\n      return {\n        ...domains,\n        [name]: recalculateDomain([\n          isDefined(min) ? min : currentDomain.domain[0],\n          isDefined(max) ? max : currentDomain.domain[1],\n        ], currentDomain),\n      };\n    },\n    adjustedDomainsBySeries,\n  );\n};\n\nexport const computedExtension = (extension) => {\n  const defaultExtension = [\n    { type: 'linear', constructor: scaleLinear },\n    { type: 'band', constructor: scaleBand },\n  ];\n  return extension.concat(defaultExtension);\n};\n\nexport const domains = (axes = [], series, data, argumentAxisName, startFromZero) => {\n  const axesOptions = collectAxesOptions(axes);\n  const calculatedDomains = calculateDomain(series, data, axesOptions, argumentAxisName);\n  return adjustDomains(axes, calculatedDomains, startFromZero);\n};\n","const isEqual = (\n  { width: firstWidth, height: firstHeight },\n  { width: secondWidth, height: secondHeight },\n) => firstWidth === secondWidth && firstHeight === secondHeight;\n\nexport const bBoxes = (prevBBoxes, { bBox, placeholder }) => {\n  if (isEqual(prevBBoxes[placeholder] || {}, bBox)) return prevBBoxes;\n  return { ...prevBBoxes, [placeholder]: bBox };\n};\n","import { HORIZONTAL } from '../constants';\n\nexport const createScale = (\n  { domain, orientation },\n  width, height,\n  constructor,\n  padding = 0,\n) => {\n  const scale = constructor();\n  if (scale.paddingInner) {\n    scale.paddingInner(padding).paddingOuter(padding / 2);\n  }\n  return scale\n    .domain(domain)\n    .range(orientation === HORIZONTAL ? [0, width] : [height, 0]);\n};\n","import { createScale } from '../../utils/scale';\nimport {\n  HORIZONTAL, TOP, LEFT, MIDDLE, END, START,\n} from '../../constants';\n\nconst getTicks = scale => (scale.ticks ? scale.ticks() : scale.domain());\nconst getOffset = scale => (scale.bandwidth ? scale.bandwidth() / 2 : 0);\nconst getDominantBaseline = (orientation, position) => {\n  if (orientation === HORIZONTAL) {\n    return position === TOP ? 'baseline' : 'hanging';\n  }\n  return MIDDLE;\n};\nconst getTextAnchor = (orientation, position) => {\n  if (orientation === HORIZONTAL) {\n    return MIDDLE;\n  }\n  return position === LEFT ? END : START;\n};\n\nconst getFormat = (scale, tickFormat) => {\n  if (scale.tickFormat) {\n    return tickFormat ? tickFormat(scale) : scale.tickFormat();\n  }\n  return tick => tick;\n};\n\nconst calculateAxisCoordinates = (\n  scale,\n  orientation,\n  position,\n  tickSize,\n  indentFromAxis,\n  tickFormat,\n) => {\n  const ticks = getTicks(scale);\n  const offset = getOffset(scale);\n  const dominantBaseline = getDominantBaseline(orientation, position);\n  const textAnchor = getTextAnchor(orientation, position);\n\n  const getTickCoordinates = (tick) => {\n    const coordinates = scale(tick) + offset;\n    if (orientation === HORIZONTAL) {\n      return {\n        dominantBaseline,\n        textAnchor,\n        x1: coordinates,\n        x2: coordinates,\n        y1: position === TOP ? -tickSize : 0,\n        y2: position === TOP ? 0 : tickSize,\n        text: getFormat(scale, tickFormat)(tick),\n        xText: coordinates,\n        yText: position === TOP ? -tickSize - indentFromAxis : tickSize + indentFromAxis,\n      };\n    }\n    return {\n      dominantBaseline,\n      textAnchor,\n      y1: coordinates,\n      y2: coordinates,\n      x1: position === LEFT ? -tickSize : 0,\n      x2: position === LEFT ? 0 : tickSize,\n      text: getFormat(scale, tickFormat)(tick),\n      xText: position === LEFT ? -tickSize - indentFromAxis : tickSize + indentFromAxis,\n      yText: coordinates,\n    };\n  };\n  return {\n    ticks: ticks.map(getTickCoordinates),\n  };\n};\n\nexport const axisCoordinates = (\n  domainOptions,\n  position,\n  width,\n  height,\n  tickSize,\n  indentFromAxis,\n  constructor,\n) => {\n  const scale = createScale(domainOptions, width, height, constructor);\n\n  return calculateAxisCoordinates(\n    scale,\n    domainOptions.orientation,\n    position,\n    tickSize,\n    indentFromAxis,\n    domainOptions.tickFormat,\n  );\n};\n\nexport const axesData = (axes = [], axisProps) => [...axes, axisProps];\n","import {\n  symbol,\n  symbolCircle,\n  line,\n  curveMonotoneX,\n  area,\n  arc,\n  pie,\n} from 'd3-shape';\nimport { createScale } from '../../utils/scale';\n\nconst getX = ({ x, width }) => x + (width / 2);\nconst getY = ({ y }) => y;\nconst getY1 = ({ y1 }) => y1;\n\nconst DEFAULT_POINT_SIZE = 7;\n\nexport const dArea = area()\n  .x(getX)\n  .y1(getY)\n  .y0(getY1);\n\nexport const dLine = line()\n  .x(getX)\n  .y(getY);\n\nexport const dSpline = line()\n  .x(getX)\n  .y(getY)\n  .curve(curveMonotoneX);\n\nconst getConstructor = (scaleExtension, type) => scaleExtension.find(\n  item => item.type === type,\n).constructor;\n\nexport const xyScales = (\n  argumentDomainOptions,\n  valueDomainOptions,\n  { width, height },\n  groupWidth,\n  scaleExtension,\n) => {\n  const xConstructor = getConstructor(scaleExtension, argumentDomainOptions.type);\n  const yConstructor = getConstructor(scaleExtension, valueDomainOptions.type);\n  return {\n    xScale: createScale(argumentDomainOptions, width, height, xConstructor, 1 - groupWidth),\n    yScale: createScale(valueDomainOptions, width, height, yConstructor),\n  };\n};\n\nexport const pieAttributes = (\n  data,\n  { xScale, yScale },\n  argumentField,\n  valueField,\n  name,\n  stack,\n  stacks,\n  { innerRadius = 0, outerRadius = 1 },\n) => {\n  const width = Math.max.apply(null, xScale.range());\n  const height = Math.max.apply(null, yScale.range());\n  const radius = Math.min(width, height) / 2;\n  const pieData = pie().value(d => d[valueField])(data);\n\n  return pieData.map(({\n    startAngle, endAngle, value, data: itemData,\n  }) => ({\n    d: arc()\n      .innerRadius(innerRadius * radius)\n      .outerRadius(outerRadius * radius)\n      .startAngle(startAngle)\n      .endAngle(endAngle)(),\n    value,\n    data: itemData,\n    id: itemData[argumentField],\n    x: width / 2,\n    y: height / 2,\n  }));\n};\n\nexport const coordinates = (\n  data,\n  { xScale, yScale },\n  argumentField,\n  valueField,\n  name,\n) => data.reduce((result, dataItem, index) => {\n  if (dataItem[argumentField] !== undefined && dataItem[valueField] !== undefined) {\n    return [...result, {\n      x: xScale(dataItem[argumentField]),\n      y: yScale(dataItem[`${valueField}-${name}-stack`][1]),\n      y1: yScale(dataItem[`${valueField}-${name}-stack`][0]),\n      width: xScale.bandwidth ? xScale.bandwidth() : 0,\n      id: index,\n      value: dataItem[valueField],\n    }];\n  }\n  return result;\n}, []);\n\nexport const barCoordinates = (\n  data,\n  { xScale, yScale },\n  argumentField,\n  valueField,\n  name,\n  stack,\n  stacks = [undefined],\n  { barWidth = 0.9 },\n  scaleExtension,\n) => {\n  const rawCoordinates = coordinates(\n    data,\n    { xScale, yScale },\n    argumentField,\n    valueField,\n    name,\n  );\n  const bandwidth = xScale.bandwidth ? xScale.bandwidth() : 0;\n  const x0Scale = createScale(\n    {\n      domain: stacks,\n    },\n    bandwidth,\n    bandwidth,\n    getConstructor(scaleExtension, 'band'),\n    1 - barWidth,\n  );\n  return rawCoordinates.map(item => ({\n    ...item,\n    width: x0Scale.bandwidth(),\n    x: item.x + x0Scale(stack),\n  }));\n};\n\nexport const findSeriesByName = (\n  name, series,\n) => series.find(seriesItem => seriesItem.symbolName === name);\n\nexport const dBar = ({\n  x, y, y1, width,\n}) => ({\n  x, y: Math.min(y, y1), width: width || 2, height: Math.abs(y1 - y),\n});\n\nexport const pointAttributes = ({ size = DEFAULT_POINT_SIZE }) => {\n  const dPoint = symbol().size([size ** 2]).type(symbolCircle)();\n  return item => ({\n    d: dPoint,\n    x: item.x,\n    y: item.y,\n  });\n};\n\nconst createNewUniqueName = name => name.replace(/\\d*$/, str => (str ? +str + 1 : 0));\n\nexport const seriesData = (series = [], seriesProps) => {\n  if (series.find((({ uniqueName }) => uniqueName === seriesProps.uniqueName))) {\n    return seriesData(\n      series,\n      { ...seriesProps, uniqueName: createNewUniqueName(seriesProps.uniqueName) },\n    );\n  }\n  return [...series, seriesProps];\n};\n\nexport const checkZeroStart = (fromZero, axisName, pathType) => ({ ...fromZero, [axisName]: fromZero[axisName] || (pathType === 'area' || pathType === 'bar') });\n","import { stack } from 'd3-shape';\n\nconst getStacks = series => series.reduce((\n  prevValue,\n  { valueField, stack: seriesStack },\n  index,\n) => {\n  if (!prevValue[seriesStack]) {\n    return {\n      ...prevValue,\n      [seriesStack]: {\n        keys: [valueField],\n        series: [index],\n      },\n    };\n  }\n  return {\n    ...prevValue,\n    [seriesStack]: {\n      keys: [...prevValue[seriesStack].keys, valueField],\n      series: [...prevValue[seriesStack].series, index],\n    },\n  };\n}, {});\n\nconst filtering = ({ stack: seriesStack }) => seriesStack;\n\nexport const processData = (offset, order) => (series, data) => {\n  const stacks = getStacks(series);\n\n  const arrayOfStacks = Object.entries(stacks).reduce((prevValue, item) => ({\n    ...prevValue,\n    [item[0]]: stack()\n      .keys(item[1].keys)\n      .order(order)\n      .offset(offset)(data),\n  }), {});\n\n\n  return data.map((singleData, dataIndex) => series.reduce((prevValue, {\n    valueField, name, stack: seriesStack,\n  }, index) => {\n    const seriesIndex = stacks[seriesStack].series.findIndex(item => item === index);\n    return {\n      ...prevValue,\n      [`${valueField}-${name}-stack`]: arrayOfStacks[seriesStack][seriesIndex][dataIndex],\n    };\n  }, singleData));\n};\n\nexport const seriesWithStacks = series => series.reduce((prevResult, singleSeries, index) => {\n  const { stack: seriesStack = `stack${index}` } = singleSeries;\n\n  return [...prevResult, { ...singleSeries, stack: seriesStack }];\n}, []);\n\nexport const stacks = series => [\n  ...new Set(series\n    .filter(singleSeries => filtering(singleSeries))\n    .map(({ stack: seriesStack }) => seriesStack)),\n];\n","import { scaleOrdinal } from 'd3-scale';\n\nconst PALETTE = ['#2196F3', '#F44336', '#4CAF50', '#FFEB3B', '#E91E63', '#9C27B0'];\n\n\nexport const palette = series => scaleOrdinal()\n  .domain(series.map(({ uniqueName }) => uniqueName))\n  .range(PALETTE);\n","export const axisName = argumentAxisName => argumentAxisName || 'argumentAxis';\n\nexport const prepareData = (data, series, processingData) => (\n  processingData ? processingData(series, data)\n    : data.map(singleData => series.reduce((prevValue, {\n      valueField, name,\n    }) => {\n      if (singleData[valueField] === undefined) {\n        return prevValue;\n      }\n\n      return {\n        ...prevValue,\n        [`${valueField}-${name}-stack`]: [0, singleData[valueField]],\n      };\n    }, singleData)));\n"],"names":["HORIZONTAL","VERTICAL","TOP","BOTTOM","LEFT","RIGHT","MIDDLE","END","START","BAND","isDefined","item","undefined","collectAxesOptions","axes","reduce","domains","name","type","tickFormat","calculateDomainField","getFieldItemFirst","getFieldItemSecond","data","domain","getCategories","prev","cur","categories","extent","getCorrectAxisType","field","find","getFieldStack","index","object","calculateDomain","series","axesOptions","argumentAxisName","valueField","argumentField","axisName","valueType","argumentType","adjustRangeToZero","Math","min","range","max","recalculateDomain","currentDomain","orientation","adjustDomains","calculatedDomains","startFromZero","adjustedDomainsBySeries","Object","keys","computedExtension","extension","defaultExtension","constructor","scaleLinear","scaleBand","concat","isEqual","firstWidth","width","firstHeight","height","secondWidth","secondHeight","bBoxes","prevBBoxes","bBox","placeholder","createScale","padding","scale","paddingInner","paddingOuter","getTicks","ticks","getOffset","bandwidth","getDominantBaseline","position","getTextAnchor","getFormat","tick","calculateAxisCoordinates","tickSize","indentFromAxis","offset","dominantBaseline","textAnchor","getTickCoordinates","coordinates","map","axisCoordinates","domainOptions","axesData","axisProps","getX","x","getY","y","getY1","y1","DEFAULT_POINT_SIZE","dArea","area","y0","dLine","line","dSpline","curve","curveMonotoneX","getConstructor","scaleExtension","xyScales","argumentDomainOptions","valueDomainOptions","groupWidth","xConstructor","yConstructor","pieAttributes","stack","stacks","xScale","yScale","innerRadius","outerRadius","apply","radius","pieData","pie","value","d","startAngle","endAngle","itemData","arc","result","dataItem","barCoordinates","barWidth","rawCoordinates","x0Scale","findSeriesByName","seriesItem","symbolName","dBar","abs","pointAttributes","size","dPoint","symbol","symbolCircle","createNewUniqueName","replace","str","seriesData","seriesProps","uniqueName","checkZeroStart","fromZero","pathType","getStacks","prevValue","seriesStack","filtering","processData","order","arrayOfStacks","entries","singleData","dataIndex","seriesIndex","findIndex","seriesWithStacks","prevResult","singleSeries","Set","filter","PALETTE","palette","scaleOrdinal","prepareData","processingData"],"mappings":"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"}