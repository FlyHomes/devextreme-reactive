{"version":3,"file":"index.js","sources":["../src/demo-viewer/theme-selector.jsx","../src/demo-viewer/theme-viewer.jsx","../src/demo-viewer/demo-renderer.jsx","../src/demo-viewer/demo-frame.jsx","../src/demo-viewer/source-code.jsx","../src/demo-viewer/demo-viewer.jsx","../src/demo-viewer/section-viewer.jsx","../src/demo-viewer/sections-viewer.jsx","../src/index.jsx"],"sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Dropdown, MenuItem } from 'react-bootstrap';\n\nimport './theme-selector.css';\n\nclass Toggle extends React.PureComponent {\n  render() {\n    const { children, onClick } = this.props;\n\n    return (\n      <a\n        className=\"toggle\"\n        href=\"\"\n        onClick={(e) => {\n          e.preventDefault();\n          onClick(e);\n        }}\n      >\n        <span className=\"caption\">\n          {children}\n        </span>\n        <span className=\"caret\" />\n      </a>\n    );\n  }\n}\n\nToggle.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func,\n};\n\nToggle.defaultProps = {\n  onClick: () => {},\n};\n\nexport const ThemeSelector = (\n  {\n    selectedThemeName, selectedVariantName, availableThemes, onChange,\n  },\n  { embeddedDemoOptions: { showThemeVariants, themeSources } },\n) => {\n  const selectedTheme = themeSources.find(({ name }) => name === selectedThemeName);\n\n  return (\n    <Dropdown\n      id=\"theme-toggle\"\n      className=\"template-chooser\"\n      onSelect={(eventKey) => {\n        const [theme, variant] = eventKey.split('|');\n        if (selectedThemeName !== theme || selectedVariantName !== variant) {\n          onChange(theme, variant);\n        }\n      }}\n    >\n      <Toggle bsRole=\"toggle\">\n        {showThemeVariants\n          ? selectedTheme.variants.find(({ name }) => name === selectedVariantName).title\n          : selectedTheme.title}\n      </Toggle>\n      <Dropdown.Menu>\n        {themeSources.reduce((acc, { name: themeName, title: themeTitle, variants }) => {\n          const available = availableThemes.indexOf(themeName) > -1;\n          const activeTheme = themeName === selectedThemeName;\n\n          if (!available) return acc;\n          if (!showThemeVariants) {\n            acc.push(\n              <MenuItem\n                key={themeName}\n                eventKey={`${themeName}|${variants[0].name}`}\n                active={activeTheme}\n              >\n                {themeTitle}\n              </MenuItem>,\n            );\n          } else {\n            acc.push(variants.map(({ name: variantName, title: variantTitle }) => {\n              const activeVariant = variantName === selectedVariantName;\n\n              return (\n                <MenuItem\n                  key={`${themeName}|${variantName}`}\n                  eventKey={`${themeName}|${variantName}`}\n                  active={activeTheme && activeVariant}\n                >\n                  {variantTitle}\n                </MenuItem>\n              );\n            }));\n          }\n          return acc;\n        }, [])}\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n\nThemeSelector.propTypes = {\n  selectedThemeName: PropTypes.string.isRequired,\n  selectedVariantName: PropTypes.string.isRequired,\n  availableThemes: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nThemeSelector.contextTypes = {\n  embeddedDemoOptions: PropTypes.object.isRequired,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Route, Switch, Redirect, withRouter,\n} from 'react-router-dom';\n\nimport { ThemeSelector } from './theme-selector';\n\nconst THEME_STORAGE_KEY = 'devextreme-reactive/react/theme';\nconst VARIANT_STORAGE_KEY = 'devextreme-reactive/react/theme-variant';\n\nlet storage = { getItem: () => undefined, setItem: () => undefined };\ntry {\n  storage = window.localStorage;\n} catch (e) {} // eslint-disable-line no-empty\n\nconst ThemeViewerBase = (\n  {\n    availableThemes, match: { url }, history, children,\n  },\n  { embeddedDemoOptions: { themeSources, showThemeVariants, showThemeSelector } },\n) => {\n  const normalizedAvailableThemes = availableThemes || themeSources.map(theme => theme.name);\n\n  const preferredThemeName = storage.getItem(THEME_STORAGE_KEY) || themeSources[0].name;\n  const preferredThemeAvailable = normalizedAvailableThemes.indexOf(preferredThemeName) > -1;\n  const fallbackThemeName = preferredThemeAvailable\n    ? preferredThemeName : normalizedAvailableThemes[0];\n\n  const fallbackTheme = themeSources.find(({ name }) => name === fallbackThemeName);\n\n  const preferredVariantName = showThemeVariants\n    ? storage.getItem(VARIANT_STORAGE_KEY)\n    : fallbackTheme.variants[0].name;\n  const preferredVariantAvailable = fallbackTheme.variants\n    .some(({ name }) => name === preferredVariantName);\n  const fallbackVariantName = preferredVariantAvailable\n    ? preferredVariantName\n    : fallbackTheme.variants[0].name;\n\n  const changeTheme = (theme, variant) => {\n    storage.setItem(THEME_STORAGE_KEY, theme);\n    storage.setItem(VARIANT_STORAGE_KEY, variant);\n    history.push(`${url}/${theme}/${variant}`);\n  };\n\n  return (\n    <Switch>\n      <Route\n        path={`${url}/:themeName/:variantName`}\n        render={({ match: { params: { themeName, variantName } } }) => (\n          <div>\n            {(showThemeSelector && (\n            <ThemeSelector\n              selectedThemeName={themeName}\n              availableThemes={normalizedAvailableThemes}\n              selectedVariantName={variantName}\n              onChange={changeTheme}\n            />\n            ))}\n            <div>\n              {children({ themeName, variantName })}\n            </div>\n          </div>\n        )}\n      />\n      <Redirect from={`${url}`} to={`${url}/${fallbackThemeName}/${fallbackVariantName}`} />\n    </Switch>\n  );\n};\n\nThemeViewerBase.propTypes = {\n  availableThemes: PropTypes.arrayOf(PropTypes.string),\n  match: PropTypes.shape({\n    url: PropTypes.string.isRequired,\n  }).isRequired,\n  history: PropTypes.object.isRequired,\n  children: PropTypes.func.isRequired,\n};\n\nThemeViewerBase.defaultProps = {\n  availableThemes: undefined,\n};\n\nThemeViewerBase.contextTypes = {\n  embeddedDemoOptions: PropTypes.object.isRequired,\n};\n\nexport const ThemeViewer = withRouter(ThemeViewerBase);\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nexport class DemoRenderer extends React.Component {\n  componentDidMount() {\n    this.renderDemo();\n  }\n\n  componentDidUpdate() {\n    this.renderDemo();\n  }\n\n  renderDemo() {\n    const {\n      sectionName,\n      demoName,\n      themeName,\n      variantName,\n    } = this.props;\n    const {\n      embeddedDemoOptions,\n    } = this.context;\n\n    const {\n      renderDemo,\n      unmountDemo,\n      demoSources,\n      themeSources,\n    } = embeddedDemoOptions;\n\n    if (this.demoRenderSkipped) {\n      unmountDemo({\n        element: this.root,\n      });\n    }\n\n    let demoSource;\n    try {\n      demoSource = demoSources[sectionName][demoName][themeName].demo;\n    } catch (e) {} // eslint-disable-line no-empty\n\n    if (!demoSource) {\n      this.demoRenderSkipped = true;\n      this.root.textContent = 'DEMO NOT AVALIABLE!';\n      return;\n    }\n\n    const demoContainerSource = themeSources\n      .find(({ name }) => name === themeName).variants\n      .find(({ name }) => name === variantName).DemoContainer;\n\n    renderDemo({\n      element: this.root,\n      demo: demoSource,\n      demoContainer: demoContainerSource,\n    });\n    this.demoRenderSkipped = false;\n  }\n\n  render() {\n    return (\n      <div\n        ref={(node) => { this.root = node; }}\n      />\n    );\n  }\n}\n\nDemoRenderer.propTypes = {\n  sectionName: PropTypes.string.isRequired,\n  demoName: PropTypes.string.isRequired,\n  themeName: PropTypes.string.isRequired,\n  variantName: PropTypes.string.isRequired,\n};\n\nDemoRenderer.contextTypes = {\n  embeddedDemoOptions: PropTypes.object.isRequired,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport Frame from 'react-frame-component';\nimport {\n  FormGroup, ControlLabel, FormControl, InputGroup, Button,\n} from 'react-bootstrap';\nimport { DemoRenderer } from './demo-renderer';\n\nclass DemoFrameRenderer extends React.PureComponent {\n  constructor(props, context) {\n    super(props, context);\n\n    const {\n      sectionName,\n      demoName,\n      themeName,\n      variantName,\n    } = props;\n    const { embeddedDemoOptions: { scriptPath, themeSources } } = this.context;\n    const themeVariantOptions = themeSources\n      .find(theme => theme.name === themeName).variants\n      .find(variant => variant.name === variantName);\n    const frameUrl = `/demo/${sectionName}/${demoName}/${themeName}/${variantName}`;\n    const themeLinks = themeVariantOptions.links\n      ? themeVariantOptions.links.map(link => `<link rel=\"stylesheet\" href=\"${link}\">`).join('\\n')\n      : '';\n    this.markup = link => `\n      <!DOCTYPE html>\n      <html>\n      <head>\n        ${themeLinks}\n        ${link !== undefined ? `<link rel=\"stylesheet\" href=\"${link}\">` : ''}\n        <style>\n          body { margin: 8px; overflow: hidden; }\n          .panel { margin: 0; }\n        </style>\n      </head>\n      <body>\n        <div id=\"mountPoint\"></div>\n        <div class=\"embedded-demo\" data-options='{ \"path\": \"${frameUrl}/clean\", \"frame\": true }'>\n          <div style=\"min-height: 500px;\">Loading...</div>\n        </div>\n        <script src=\"${scriptPath}\"></script>\n      </body>\n      </html>`;\n    this.state = {\n      editableLink: themeVariantOptions.editableLink,\n      frameHeight: 600,\n    };\n  }\n\n  componentDidMount() {\n    this.updateFrameHeight();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { editableLink } = this.state;\n    if (editableLink !== prevState.editableLink) {\n      if (this.node) this.node.ownerDocument.location.reload();\n    }\n  }\n\n  updateFrameHeight() {\n    const { frameHeight } = this.state;\n    setTimeout(this.updateFrameHeight.bind(this));\n    if (!this.node) return;\n    const height = this.node.ownerDocument.documentElement.offsetHeight;\n    if (height !== frameHeight) {\n      this.setState({ frameHeight: height });\n    }\n  }\n\n  render() {\n    const {\n      sectionName,\n      demoName,\n      themeName,\n      variantName,\n    } = this.props;\n    const { embeddedDemoOptions: { frame } } = this.context;\n    const { editableLink, frameHeight } = this.state;\n\n    return (\n      <div>\n        {!frame && !!editableLink ? (\n          <form\n            style={{ marginBottom: '20px' }}\n          >\n            <FormGroup controlId=\"customThemeLink\">\n              <ControlLabel>\nCustom theme link\n              </ControlLabel>\n              <InputGroup>\n                <FormControl\n                  type=\"text\"\n                  inputRef={(node) => { this.customThemeLinkNode = node; }}\n                  defaultValue={editableLink}\n                />\n                <InputGroup.Button>\n                  <Button\n                    onClick={() => {\n                      this.setState({ editableLink: this.customThemeLinkNode.value });\n                    }}\n                  >\n                    Apply\n                  </Button>\n                </InputGroup.Button>\n              </InputGroup>\n            </FormGroup>\n          </form>\n        ) : null}\n\n        {frame\n          ? (\n            <DemoRenderer\n              sectionName={sectionName}\n              demoName={demoName}\n              themeName={themeName}\n              variantName={variantName}\n            />\n          )\n          : (\n            <div\n              style={{\n                margin: '-8px',\n              }}\n            >\n              <Frame\n                style={{\n                  border: 'none',\n                  width: '100%',\n                  height: `${frameHeight}px`,\n                  marginBottom: '20px',\n                }}\n                initialContent={this.markup(editableLink)}\n                mountTarget=\"#mountPoint\"\n              >\n                <div ref={(node) => { this.node = node; }} />\n              </Frame>\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n\nDemoFrameRenderer.propTypes = {\n  sectionName: PropTypes.string.isRequired,\n  demoName: PropTypes.string.isRequired,\n  themeName: PropTypes.string.isRequired,\n  variantName: PropTypes.string.isRequired,\n};\n\nDemoFrameRenderer.contextTypes = {\n  embeddedDemoOptions: PropTypes.object.isRequired,\n};\n\n// eslint-disable-next-line react/no-multi-comp\nexport class DemoFrame extends React.PureComponent {\n  render() {\n    const Rerenderer = ({ children }) => children;\n    return (\n      <Rerenderer>\n        <DemoFrameRenderer {...this.props} />\n      </Rerenderer>\n    );\n  }\n}\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport prism from 'prismjs';\nimport 'prismjs/components/prism-jsx';\n\nexport class SourceCode extends React.PureComponent {\n  render() {\n    const { themeName, sectionName, demoName } = this.props;\n    const { embeddedDemoOptions } = this.context;\n    const { demoSources } = embeddedDemoOptions;\n    return (\n      <pre className=\"highlight language-jsx\">\n        <code\n          className=\"language-jsx\"\n          // eslint-disable-next-line react/no-danger\n          dangerouslySetInnerHTML={{\n            __html: prism.highlight(\n              demoSources[sectionName][demoName][themeName].source || '',\n              prism.languages.jsx,\n            ),\n          }}\n        />\n      </pre>\n    );\n  }\n}\n\nSourceCode.propTypes = {\n  sectionName: PropTypes.string.isRequired,\n  demoName: PropTypes.string.isRequired,\n  themeName: PropTypes.string.isRequired,\n};\n\nSourceCode.contextTypes = {\n  embeddedDemoOptions: PropTypes.object.isRequired,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Route, Switch } from 'react-router-dom';\nimport { Nav, NavItem, Tab } from 'react-bootstrap';\n\nimport { ThemeViewer } from './theme-viewer';\nimport { DemoFrame } from './demo-frame';\nimport { SourceCode } from './source-code';\n\nexport const DemoViewer = (\n  { match: { params: { demoName, sectionName }, url } },\n  { embeddedDemoOptions: { defaultTab, showThemeSelector, demoSources } },\n) => (\n  <Switch>\n    <Route\n      path={`${url}/:themeName/:variantName/clean`}\n      render={({ match: { params: { themeName, variantName } } }) => (\n        <div>\n          <DemoFrame\n            themeName={themeName}\n            variantName={variantName}\n            sectionName={sectionName}\n            demoName={demoName}\n          />\n        </div>\n      )}\n    />\n    <Route\n      path={url}\n      render={() => (\n        <div style={{ paddingTop: '8px' }}>\n          <ThemeViewer\n            availableThemes={Object.keys(demoSources[sectionName][demoName])}\n          >\n            {({ themeName, variantName }) => (\n              <Tab.Container\n                id={`${sectionName}-${demoName}-demo`}\n                defaultActiveKey={defaultTab}\n              >\n                <div style={{ marginTop: showThemeSelector ? '-38px' : 0 }}>\n                  <Nav bsStyle=\"tabs\">\n                    <NavItem eventKey=\"preview\">\n                      Preview\n                    </NavItem>\n                    <NavItem eventKey=\"source\">\n                      Source\n                    </NavItem>\n                  </Nav>\n                  <Tab.Content\n                    animation\n                    mountOnEnter\n                    style={{ marginTop: '20px' }}\n                  >\n                    <Tab.Pane eventKey=\"preview\">\n                      <DemoFrame\n                        themeName={themeName}\n                        variantName={variantName}\n                        sectionName={sectionName}\n                        demoName={demoName}\n                      />\n                    </Tab.Pane>\n                    <Tab.Pane eventKey=\"source\">\n                      <SourceCode\n                        themeName={themeName}\n                        sectionName={sectionName}\n                        demoName={demoName}\n                      />\n                    </Tab.Pane>\n                  </Tab.Content>\n                </div>\n              </Tab.Container>\n            )}\n          </ThemeViewer>\n        </div>\n      )}\n    />\n  </Switch>\n);\n\nDemoViewer.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      sectionName: PropTypes.string.isRequired,\n      demoName: PropTypes.string.isRequired,\n    }),\n    url: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nDemoViewer.contextTypes = {\n  embeddedDemoOptions: PropTypes.object.isRequired,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport { ThemeViewer } from './theme-viewer';\nimport { DemoFrame } from './demo-frame';\n\nexport const SectionViewerBase = ({\n  match: { params: { sectionName } },\n}, {\n  embeddedDemoOptions: { demoSources },\n}) => (\n  <ThemeViewer>\n    {({ themeName, variantName }) => (\n      Object.keys(demoSources[sectionName])\n        .map(demoName => (\n          <div key={demoName}>\n            <h4>\n              <Link to={`/demo/${sectionName}/${demoName}/${themeName}/${variantName}`}>\n                {demoName}\n              </Link>\n            </h4>\n            <DemoFrame\n              themeName={themeName}\n              variantName={variantName}\n              sectionName={sectionName}\n              demoName={demoName}\n            />\n          </div>\n        ))\n    )}\n  </ThemeViewer>\n);\n\nSectionViewerBase.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      sectionName: PropTypes.string.isRequired,\n    }),\n  }).isRequired,\n};\n\nSectionViewerBase.contextTypes = {\n  embeddedDemoOptions: PropTypes.object.isRequired,\n};\n\n\nexport const SectionViewer = withRouter(SectionViewerBase);\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Link, Route, Switch, Redirect,\n} from 'react-router-dom';\n\nimport { SectionViewer } from './section-viewer';\n\nexport const SectionsViewer = ({\n  match: { url },\n}, {\n  embeddedDemoOptions: { demoSources },\n}) => {\n  const sections = Object.keys(demoSources);\n\n  return (\n    <Switch>\n      <Redirect exact from={`${url}`} to={`${url}/${sections[0]}`} />\n      <Route\n        path={`${url}/:sectionName`}\n        render={({ match: { params: { sectionName } } }) => (\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-3 main-menu\">\n                <h3>\n                  Demo Sections\n                </h3>\n                <ul className=\"list-unstyled\">\n                  {sections.map(section => (\n                    <li key={section}>\n                      {section === sectionName\n                        ? (\n                          <span>\n                            {section}\n                          </span>\n                        )\n                        : (\n                          <Link to={`${url}/${section}`}>\n                            {section}\n                          </Link>\n                        )}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n              <div className=\"col-md-9 demo-content\">\n                <h2>\n                  {sectionName}\n                </h2>\n                <SectionViewer sectionName={sectionName} />\n              </div>\n            </div>\n          </div>\n        )}\n      />\n    </Switch>\n  );\n};\n\nSectionsViewer.propTypes = {\n  match: PropTypes.shape({\n    url: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nSectionsViewer.contextTypes = {\n  embeddedDemoOptions: PropTypes.object.isRequired,\n};\n","import * as React from 'react';\nimport { render } from 'react-dom';\nimport * as PropTypes from 'prop-types';\nimport {\n  HashRouter,\n  MemoryRouter,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\nimport { DemoViewer } from './demo-viewer/demo-viewer';\nimport { SectionsViewer } from './demo-viewer/sections-viewer';\n\nclass App extends React.Component {\n  getChildContext() {\n    const {\n      router, path, ...restProps\n    } = this.props;\n\n    return { embeddedDemoOptions: restProps };\n  }\n\n  render() {\n    const { router, path } = this.props;\n    const Router = router === 'hash' ? HashRouter : MemoryRouter;\n\n    return (\n      <Router\n        initialEntries={path ? [path] : undefined}\n      >\n        <Switch>\n          <Route path=\"/demo/:sectionName/:demoName\" component={DemoViewer} />\n          <Route path=\"/section\" component={SectionsViewer} />\n          <Redirect from=\"/\" to=\"/section\" />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nApp.childContextTypes = {\n  embeddedDemoOptions: PropTypes.object,\n};\n\nApp.propTypes = {\n  router: PropTypes.string,\n  path: PropTypes.string,\n  scriptPath: PropTypes.string,\n  showThemeSelector: PropTypes.bool,\n  showThemeVariants: PropTypes.bool,\n  defaultTab: PropTypes.string,\n};\n\nApp.defaultProps = {\n  router: 'memory',\n  path: undefined,\n  scriptPath: '/dist/index.js',\n  showThemeSelector: false,\n  showThemeVariants: false,\n  defaultTab: 'preview',\n};\n\nexport const initialize = ({\n  themeSources,\n  demoSources,\n  renderDemo,\n  unmountDemo,\n}) => {\n  const embeddedDemoPlaceholders = document.getElementsByClassName('embedded-demo');\n  const embeddedDemoConfigs = [...embeddedDemoPlaceholders]\n    .map(placeholder => ({\n      options: JSON.parse(placeholder.getAttribute('data-options') || '{}'),\n      placeholder,\n    }));\n  embeddedDemoConfigs\n    .forEach((config) => {\n      render(\n        <App\n          {...config.options}\n          themeSources={themeSources}\n          demoSources={demoSources}\n          renderDemo={renderDemo}\n          unmountDemo={unmountDemo}\n        />,\n        config.placeholder,\n      );\n    });\n};\n"],"names":["Toggle","props","children","onClick","React.createElement","e","preventDefault","React","propTypes","PropTypes","isRequired","defaultProps","ThemeSelector","selectedThemeName","selectedVariantName","availableThemes","onChange","embeddedDemoOptions","showThemeVariants","themeSources","selectedTheme","find","name","eventKey","split","theme","variant","variants","title","reduce","acc","themeName","themeTitle","available","indexOf","activeTheme","push","map","variantName","variantTitle","activeVariant","contextTypes","THEME_STORAGE_KEY","VARIANT_STORAGE_KEY","storage","getItem","undefined","setItem","window","localStorage","ThemeViewerBase","url","match","history","showThemeSelector","normalizedAvailableThemes","preferredThemeName","preferredThemeAvailable","fallbackThemeName","fallbackTheme","preferredVariantName","preferredVariantAvailable","some","fallbackVariantName","changeTheme","params","ThemeViewer","withRouter","DemoRenderer","renderDemo","sectionName","demoName","context","unmountDemo","demoSources","demoRenderSkipped","root","demoSource","demo","textContent","demoContainerSource","DemoContainer","node","DemoFrameRenderer","scriptPath","themeVariantOptions","frameUrl","themeLinks","links","link","join","markup","state","editableLink","updateFrameHeight","prevProps","prevState","ownerDocument","location","reload","frameHeight","bind","height","documentElement","offsetHeight","setState","frame","marginBottom","customThemeLinkNode","value","DemoFrame","Rerenderer","SourceCode","prism","highlight","source","languages","jsx","DemoViewer","defaultTab","paddingTop","Object","keys","marginTop","SectionViewerBase","SectionViewer","SectionsViewer","sections","section","App","router","path","restProps","Router","HashRouter","MemoryRouter","childContextTypes","initialize","embeddedDemoPlaceholders","document","getElementsByClassName","embeddedDemoConfigs","JSON","parse","placeholder","getAttribute","forEach","config","options"],"mappings":"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"}